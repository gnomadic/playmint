/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { GameFactory, GameFactoryInterface } from "../../src/GameFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyAdmin",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "gm",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "game",
        type: "address",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gm",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
    ],
    name: "createGame",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entityFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "contract Game",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "startAt",
        type: "uint8",
      },
    ],
    name: "getGames",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "game",
            type: "address",
          },
          {
            internalType: "address",
            name: "gm",
            type: "address",
          },
          {
            internalType: "string",
            name: "displayName",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "gameUrl",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct AddressKey[]",
            name: "availableFunctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct AddressKey[]",
            name: "availableData",
            type: "tuple[]",
          },
          {
            internalType: "string[]",
            name: "flows",
            type: "string[]",
          },
        ],
        internalType: "struct GameSummary[10]",
        name: "result",
        type: "tuple[10]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_entityFactory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_entityFactory",
        type: "address",
      },
    ],
    name: "setEntityFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameContract",
        type: "address",
      },
    ],
    name: "setGameContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611710806100616000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063d3f3300911610066578063d3f3300914610159578063d6b66c5814610177578063e87c0ee614610193578063ec06bb5d146101b1578063f851a440146101e15761009e565b8063117a5b90146100a3578063405ebd4d146100d3578063485cc955146100ef5780639d1c1b821461010b5780639f8c4da514610129575b600080fd5b6100bd60048036038101906100b89190610943565b6101ff565b6040516100ca91906109ef565b60405180910390f35b6100ed60048036038101906100e89190610a48565b61023e565b005b61010960048036038101906101049190610a75565b610308565b005b610113610414565b6040516101209190610ac4565b60405180910390f35b610143600480360381019061013e9190610b18565b61043a565b6040516101509190610f2e565b60405180910390f35b610161610567565b60405161016e9190610ac4565b60405180910390f35b610191600480360381019061018c9190610a48565b61058b565b005b61019b610656565b6040516101a89190610f5f565b60405180910390f35b6101cb60048036038101906101c69190610fdf565b610663565b6040516101d89190610ac4565b60405180910390f35b6101e96107cb565b6040516101f69190610ac4565b60405180910390f35b6001818154811061020f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c5576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038f576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61044261085a565b6000600a905060008390505b6001805490508160ff161080156104755750838261046c919061106e565b60ff168160ff16105b156105605760018160ff1681548110610491576104906110a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634051ddac6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061052f91906115b2565b838260ff16600a8110610545576105446110a3565b5b60200201819052508080610558906115fb565b91505061044e565b5050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610612576040517f4755657900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600180549050905090565b60008061068f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166107f1565b90508073ffffffffffffffffffffffffffffffffffffffff16637bb7c0d8868686600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518563ffffffff1660e01b81526004016106f29493929190611671565b600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505050506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb60d84e37a6658effce28870b1d123cb86f86409df5888679310c0f276e1f5d285826040516107b89291906116b1565b60405180910390a1809150509392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006107fe600083610805565b9050919050565b60006c5af43d3d93803e602a57fd5bf36021528160145273602c3d8160093d39f33d3d3d3d363d3d37363d736000526035600c84f090508061084f5763301164256000526004601cfd5b600060215292915050565b604051806101400160405280600a905b610872610888565b81526020019060019003908161086a5790505090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6109208161090d565b811461092b57600080fd5b50565b60008135905061093d81610917565b92915050565b60006020828403121561095957610958610903565b5b60006109678482850161092e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109b56109b06109ab84610970565b610990565b610970565b9050919050565b60006109c78261099a565b9050919050565b60006109d9826109bc565b9050919050565b6109e9816109ce565b82525050565b6000602082019050610a0460008301846109e0565b92915050565b6000610a1582610970565b9050919050565b610a2581610a0a565b8114610a3057600080fd5b50565b600081359050610a4281610a1c565b92915050565b600060208284031215610a5e57610a5d610903565b5b6000610a6c84828501610a33565b91505092915050565b60008060408385031215610a8c57610a8b610903565b5b6000610a9a85828601610a33565b9250506020610aab85828601610a33565b9150509250929050565b610abe81610a0a565b82525050565b6000602082019050610ad96000830184610ab5565b92915050565b600060ff82169050919050565b610af581610adf565b8114610b0057600080fd5b50565b600081359050610b1281610aec565b92915050565b600060208284031215610b2e57610b2d610903565b5b6000610b3c84828501610b03565b91505092915050565b6000600a9050919050565b600081905092915050565b6000819050919050565b610b6e81610a0a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bae578082015181840152602081019050610b93565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bd682610b74565b610be08185610b7f565b9350610bf0818560208601610b90565b610bf981610bba565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152610c4d8282610bcb565b9150506020830151610c626020860182610b65565b508091505092915050565b6000610c798383610c30565b905092915050565b6000602082019050919050565b6000610c9982610c04565b610ca38185610c0f565b935083602082028501610cb585610c20565b8060005b85811015610cf15784840389528151610cd28582610c6d565b9450610cdd83610c81565b925060208a01995050600181019050610cb9565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610d3b8383610bcb565b905092915050565b6000602082019050919050565b6000610d5b82610d03565b610d658185610d0e565b935083602082028501610d7785610d1f565b8060005b85811015610db35784840389528151610d948582610d2f565b9450610d9f83610d43565b925060208a01995050600181019050610d7b565b50829750879550505050505092915050565b600061010083016000830151610dde6000860182610b65565b506020830151610df16020860182610b65565b5060408301518482036040860152610e098282610bcb565b91505060608301518482036060860152610e238282610bcb565b91505060808301518482036080860152610e3d8282610bcb565b91505060a083015184820360a0860152610e578282610c8e565b91505060c083015184820360c0860152610e718282610c8e565b91505060e083015184820360e0860152610e8b8282610d50565b9150508091505092915050565b6000610ea48383610dc5565b905092915050565b6000602082019050919050565b6000610ec482610b45565b610ece8185610b50565b935083602082028501610ee085610b5b565b8060005b85811015610f1c5784840389528151610efd8582610e98565b9450610f0883610eac565b925060208a01995050600181019050610ee4565b50829750879550505050505092915050565b60006020820190508181036000830152610f488184610eb9565b905092915050565b610f598161090d565b82525050565b6000602082019050610f746000830184610f50565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f9f57610f9e610f7a565b5b8235905067ffffffffffffffff811115610fbc57610fbb610f7f565b5b602083019150836001820283011115610fd857610fd7610f84565b5b9250929050565b600080600060408486031215610ff857610ff7610903565b5b600061100686828701610a33565b935050602084013567ffffffffffffffff81111561102757611026610908565b5b61103386828701610f89565b92509250509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061107982610adf565b915061108483610adf565b9250828201905060ff81111561109d5761109c61103f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61110f82610bba565b810181811067ffffffffffffffff8211171561112e5761112d6110d7565b5b80604052505050565b60006111416108f9565b905061114d8282611106565b919050565b600080fd5b60008151905061116681610a1c565b92915050565b600080fd5b600067ffffffffffffffff82111561118c5761118b6110d7565b5b61119582610bba565b9050602081019050919050565b60006111b56111b084611171565b611137565b9050828152602081018484840111156111d1576111d061116c565b5b6111dc848285610b90565b509392505050565b600082601f8301126111f9576111f8610f7a565b5b81516112098482602086016111a2565b91505092915050565b600067ffffffffffffffff82111561122d5761122c6110d7565b5b602082029050602081019050919050565b600060408284031215611254576112536110d2565b5b61125e6040611137565b9050600082015167ffffffffffffffff81111561127e5761127d611152565b5b61128a848285016111e4565b600083015250602061129e84828501611157565b60208301525092915050565b60006112bd6112b884611212565b611137565b905080838252602082019050602084028301858111156112e0576112df610f84565b5b835b8181101561132757805167ffffffffffffffff81111561130557611304610f7a565b5b808601611312898261123e565b855260208501945050506020810190506112e2565b5050509392505050565b600082601f83011261134657611345610f7a565b5b81516113568482602086016112aa565b91505092915050565b600067ffffffffffffffff82111561137a576113796110d7565b5b602082029050602081019050919050565b600061139e6113998461135f565b611137565b905080838252602082019050602084028301858111156113c1576113c0610f84565b5b835b8181101561140857805167ffffffffffffffff8111156113e6576113e5610f7a565b5b8086016113f389826111e4565b855260208501945050506020810190506113c3565b5050509392505050565b600082601f83011261142757611426610f7a565b5b815161143784826020860161138b565b91505092915050565b60006101008284031215611457576114566110d2565b5b611462610100611137565b9050600061147284828501611157565b600083015250602061148684828501611157565b602083015250604082015167ffffffffffffffff8111156114aa576114a9611152565b5b6114b6848285016111e4565b604083015250606082015167ffffffffffffffff8111156114da576114d9611152565b5b6114e6848285016111e4565b606083015250608082015167ffffffffffffffff81111561150a57611509611152565b5b611516848285016111e4565b60808301525060a082015167ffffffffffffffff81111561153a57611539611152565b5b61154684828501611331565b60a08301525060c082015167ffffffffffffffff81111561156a57611569611152565b5b61157684828501611331565b60c08301525060e082015167ffffffffffffffff81111561159a57611599611152565b5b6115a684828501611412565b60e08301525092915050565b6000602082840312156115c8576115c7610903565b5b600082015167ffffffffffffffff8111156115e6576115e5610908565b5b6115f284828501611440565b91505092915050565b600061160682610adf565b915060ff82036116195761161861103f565b5b600182019050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006116508385611624565b935061165d838584611635565b61166683610bba565b840190509392505050565b60006060820190506116866000830187610ab5565b8181036020830152611699818587611644565b90506116a86040830184610ab5565b95945050505050565b60006040820190506116c66000830185610ab5565b6116d36020830184610ab5565b939250505056fea26469706673582212209461576aa36b493605d286aed4e258072a04859d64c3091fc201b481fe6ad4a464736f6c63430008180033";

type GameFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameFactory__factory extends ContractFactory {
  constructor(...args: GameFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GameFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GameFactory__factory {
    return super.connect(runner) as GameFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameFactoryInterface {
    return new Interface(_abi) as GameFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GameFactory {
    return new Contract(address, _abi, runner) as unknown as GameFactory;
  }
}
