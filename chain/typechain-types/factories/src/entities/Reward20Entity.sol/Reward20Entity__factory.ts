/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Reward20Entity,
  Reward20EntityInterface,
} from "../../../../src/entities/Reward20Entity.sol/Reward20Entity";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "game",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableKeys",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_game",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keys",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d51806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806307420a41146100675780630cb6aaf114610083578063c3fe3e28146100b3578063c4d66de8146100d1578063e5932c40146100ed578063ee88f12314610109575b600080fd5b610081600480360381019061007c9190610732565b610127565b005b61009d60048036038101906100989190610772565b610292565b6040516100aa919061082f565b60405180910390f35b6100bb61033e565b6040516100c89190610860565b60405180910390f35b6100eb60048036038101906100e6919061087b565b610364565b005b6101076004803603810190610102919061087b565b610426565b005b61011161046a565b60405161011e91906109b4565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101c0576101bb6040518060400160405280600c81526020017f4e6f20746f6b656e207365740000000000000000000000000000000000000000815250610543565b61028e565b6101fe6040518060400160405280600d81526020017f73656e64696e6720746f6b656e00000000000000000000000000000000000000815250610543565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b815260040161025b9291906109e5565b600060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050505b5050565b600081815481106102a257600080fd5b9060005260206000200160009150905080546102bd90610a3d565b80601f01602080910402602001604051908101604052809291908181526020018280546102e990610a3d565b80156103365780601f1061030b57610100808354040283529160200191610336565b820191906000526020600020905b81548152906001019060200180831161031957829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061036e6105dc565b905080546003825580156103a15760018160011c14303b106103985763f92ee8a96000526004601cfd5b818160ff1b1b91505b5081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103ed6000610607565b8015610422576002815560016020527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602080a15b5050565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561053a5783829060005260206000200180546104ad90610a3d565b80601f01602080910402602001604051908101604052809291908181526020018280546104d990610a3d565b80156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b50505050508152602001906001019061048e565b50505050905090565b6105d981604051602401610557919061082f565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610670565b50565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffbf60113260001b905090565b8080600181540180825580915050600190039060005260206000200160006040518060400160405280600d81526020017f72657761726441646472657373000000000000000000000000000000000000008152509091909150908161066c9190610c49565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c98261069e565b9050919050565b6106d9816106be565b81146106e457600080fd5b50565b6000813590506106f6816106d0565b92915050565b6000819050919050565b61070f816106fc565b811461071a57600080fd5b50565b60008135905061072c81610706565b92915050565b6000806040838503121561074957610748610699565b5b6000610757858286016106e7565b92505060206107688582860161071d565b9150509250929050565b60006020828403121561078857610787610699565b5b60006107968482850161071d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107d95780820151818401526020810190506107be565b60008484015250505050565b6000601f19601f8301169050919050565b60006108018261079f565b61080b81856107aa565b935061081b8185602086016107bb565b610824816107e5565b840191505092915050565b6000602082019050818103600083015261084981846107f6565b905092915050565b61085a816106be565b82525050565b60006020820190506108756000830184610851565b92915050565b60006020828403121561089157610890610699565b5b600061089f848285016106e7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006108f08261079f565b6108fa81856108d4565b935061090a8185602086016107bb565b610913816107e5565b840191505092915050565b600061092a83836108e5565b905092915050565b6000602082019050919050565b600061094a826108a8565b61095481856108b3565b935083602082028501610966856108c4565b8060005b858110156109a25784840389528151610983858261091e565b945061098e83610932565b925060208a0199505060018101905061096a565b50829750879550505050505092915050565b600060208201905081810360008301526109ce818461093f565b905092915050565b6109df816106fc565b82525050565b60006040820190506109fa6000830185610851565b610a0760208301846109d6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a5557607f821691505b602082108103610a6857610a67610a0e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610aff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ac2565b610b098683610ac2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b46610b41610b3c846106fc565b610b21565b6106fc565b9050919050565b6000819050919050565b610b6083610b2b565b610b74610b6c82610b4d565b848454610acf565b825550505050565b600090565b610b89610b7c565b610b94818484610b57565b505050565b5b81811015610bb857610bad600082610b81565b600181019050610b9a565b5050565b601f821115610bfd57610bce81610a9d565b610bd784610ab2565b81016020851015610be6578190505b610bfa610bf285610ab2565b830182610b99565b50505b505050565b600082821c905092915050565b6000610c2060001984600802610c02565b1980831691505092915050565b6000610c398383610c0f565b9150826002028217905092915050565b610c528261079f565b67ffffffffffffffff811115610c6b57610c6a610a6e565b5b610c758254610a3d565b610c80828285610bbc565b600060209050601f831160018114610cb35760008415610ca1578287015190505b610cab8582610c2d565b865550610d13565b601f198416610cc186610a9d565b60005b82811015610ce957848901518255600182019150602085019450602081019050610cc4565b86831015610d065784890151610d02601f891682610c0f565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220998041f194e45a8ae29bb1eecfa3e9be00fd0e843f4fe6171fc0efb64639b52164736f6c63430008180033";

type Reward20EntityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Reward20EntityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reward20Entity__factory extends ContractFactory {
  constructor(...args: Reward20EntityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Reward20Entity & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reward20Entity__factory {
    return super.connect(runner) as Reward20Entity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Reward20EntityInterface {
    return new Interface(_abi) as Reward20EntityInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Reward20Entity {
    return new Contract(address, _abi, runner) as unknown as Reward20Entity;
  }
}
