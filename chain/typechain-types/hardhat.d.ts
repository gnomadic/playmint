/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC721A__IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__factory>;
    getContractFactory(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721A__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "LibClone",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibClone__factory>;
    getContractFactory(
      name: "ComponentRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComponentRegistry__factory>;
    getContractFactory(
      name: "DailyInteractionModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DailyInteractionModule__factory>;
    getContractFactory(
      name: "IComponent",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IComponent__factory>;
    getContractFactory(
      name: "MMONeighborInteractionModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MMONeighborInteractionModule__factory>;
    getContractFactory(
      name: "MMOSessionModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MMOSessionModule__factory>;
    getContractFactory(
      name: "QueueSession",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.QueueSession__factory>;
    getContractFactory(
      name: "Reward1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reward1155__factory>;
    getContractFactory(
      name: "RewardERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardERC20__factory>;
    getContractFactory(
      name: "RockPaperScissors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RockPaperScissors__factory>;
    getContractFactory(
      name: "CatchEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CatchEntity__factory>;
    getContractFactory(
      name: "DailyInteractionEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DailyInteractionEntity__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "FlowEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlowEntity__factory>;
    getContractFactory(
      name: "IEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntity__factory>;
    getContractFactory(
      name: "IGameFuncEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGameFuncEntity__factory>;
    getContractFactory(
      name: "INumberEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INumberEntity__factory>;
    getContractFactory(
      name: "MMONeighborInteractionEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MMONeighborInteractionEntity__factory>;
    getContractFactory(
      name: "MMOSessionEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MMOSessionEntity__factory>;
    getContractFactory(
      name: "QueueSessionEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.QueueSessionEntity__factory>;
    getContractFactory(
      name: "Reward1155Entity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reward1155Entity__factory>;
    getContractFactory(
      name: "SimpleMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleMintable__factory>;
    getContractFactory(
      name: "Reward20Entity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reward20Entity__factory>;
    getContractFactory(
      name: "SimpleMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleMintableERC20__factory>;
    getContractFactory(
      name: "RockPaperScissorEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RockPaperScissorEntity__factory>;
    getContractFactory(
      name: "EntityFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EntityFactory__factory>;
    getContractFactory(
      name: "Game",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Game__factory>;
    getContractFactory(
      name: "GameFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GameFactory__factory>;
    getContractFactory(
      name: "IEntityFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntityFactory__factory>;
    getContractFactory(
      name: "IGame",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGame__factory>;
    getContractFactory(
      name: "PlayMintContext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlayMintContext__factory>;
    getContractFactory(
      name: "D7",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.D7__factory>;
    getContractFactory(
      name: "FarcadeAlphaTestTicket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FarcadeAlphaTestTicket__factory>;

    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC721A__IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A__IERC721Receiver>;
    getContractAt(
      name: "ERC721A",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A>;
    getContractAt(
      name: "IERC721A",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721A>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "LibClone",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibClone>;
    getContractAt(
      name: "ComponentRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ComponentRegistry>;
    getContractAt(
      name: "DailyInteractionModule",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DailyInteractionModule>;
    getContractAt(
      name: "IComponent",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IComponent>;
    getContractAt(
      name: "MMONeighborInteractionModule",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MMONeighborInteractionModule>;
    getContractAt(
      name: "MMOSessionModule",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MMOSessionModule>;
    getContractAt(
      name: "QueueSession",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.QueueSession>;
    getContractAt(
      name: "Reward1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Reward1155>;
    getContractAt(
      name: "RewardERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardERC20>;
    getContractAt(
      name: "RockPaperScissors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RockPaperScissors>;
    getContractAt(
      name: "CatchEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CatchEntity>;
    getContractAt(
      name: "DailyInteractionEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DailyInteractionEntity>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "FlowEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FlowEntity>;
    getContractAt(
      name: "IEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntity>;
    getContractAt(
      name: "IGameFuncEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGameFuncEntity>;
    getContractAt(
      name: "INumberEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.INumberEntity>;
    getContractAt(
      name: "MMONeighborInteractionEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MMONeighborInteractionEntity>;
    getContractAt(
      name: "MMOSessionEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MMOSessionEntity>;
    getContractAt(
      name: "QueueSessionEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.QueueSessionEntity>;
    getContractAt(
      name: "Reward1155Entity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Reward1155Entity>;
    getContractAt(
      name: "SimpleMintable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleMintable>;
    getContractAt(
      name: "Reward20Entity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Reward20Entity>;
    getContractAt(
      name: "SimpleMintableERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleMintableERC20>;
    getContractAt(
      name: "RockPaperScissorEntity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RockPaperScissorEntity>;
    getContractAt(
      name: "EntityFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EntityFactory>;
    getContractAt(
      name: "Game",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Game>;
    getContractAt(
      name: "GameFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GameFactory>;
    getContractAt(
      name: "IEntityFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntityFactory>;
    getContractAt(
      name: "IGame",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGame>;
    getContractAt(
      name: "PlayMintContext",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlayMintContext>;
    getContractAt(
      name: "D7",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.D7>;
    getContractAt(
      name: "FarcadeAlphaTestTicket",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FarcadeAlphaTestTicket>;

    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ERC721A__IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A__IERC721Receiver>;
    deployContract(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A>;
    deployContract(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721A>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "LibClone",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibClone>;
    deployContract(
      name: "ComponentRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ComponentRegistry>;
    deployContract(
      name: "DailyInteractionModule",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DailyInteractionModule>;
    deployContract(
      name: "IComponent",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IComponent>;
    deployContract(
      name: "MMONeighborInteractionModule",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMONeighborInteractionModule>;
    deployContract(
      name: "MMOSessionModule",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMOSessionModule>;
    deployContract(
      name: "QueueSession",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.QueueSession>;
    deployContract(
      name: "Reward1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reward1155>;
    deployContract(
      name: "RewardERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardERC20>;
    deployContract(
      name: "RockPaperScissors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RockPaperScissors>;
    deployContract(
      name: "CatchEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatchEntity>;
    deployContract(
      name: "DailyInteractionEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DailyInteractionEntity>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "FlowEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlowEntity>;
    deployContract(
      name: "IEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntity>;
    deployContract(
      name: "IGameFuncEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGameFuncEntity>;
    deployContract(
      name: "INumberEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INumberEntity>;
    deployContract(
      name: "MMONeighborInteractionEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMONeighborInteractionEntity>;
    deployContract(
      name: "MMOSessionEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMOSessionEntity>;
    deployContract(
      name: "QueueSessionEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.QueueSessionEntity>;
    deployContract(
      name: "Reward1155Entity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reward1155Entity>;
    deployContract(
      name: "SimpleMintable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleMintable>;
    deployContract(
      name: "Reward20Entity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reward20Entity>;
    deployContract(
      name: "SimpleMintableERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleMintableERC20>;
    deployContract(
      name: "RockPaperScissorEntity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RockPaperScissorEntity>;
    deployContract(
      name: "EntityFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EntityFactory>;
    deployContract(
      name: "Game",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Game>;
    deployContract(
      name: "GameFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GameFactory>;
    deployContract(
      name: "IEntityFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntityFactory>;
    deployContract(
      name: "IGame",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGame>;
    deployContract(
      name: "PlayMintContext",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlayMintContext>;
    deployContract(
      name: "D7",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.D7>;
    deployContract(
      name: "FarcadeAlphaTestTicket",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FarcadeAlphaTestTicket>;

    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ERC721A__IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A__IERC721Receiver>;
    deployContract(
      name: "ERC721A",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A>;
    deployContract(
      name: "IERC721A",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721A>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "LibClone",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibClone>;
    deployContract(
      name: "ComponentRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ComponentRegistry>;
    deployContract(
      name: "DailyInteractionModule",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DailyInteractionModule>;
    deployContract(
      name: "IComponent",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IComponent>;
    deployContract(
      name: "MMONeighborInteractionModule",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMONeighborInteractionModule>;
    deployContract(
      name: "MMOSessionModule",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMOSessionModule>;
    deployContract(
      name: "QueueSession",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.QueueSession>;
    deployContract(
      name: "Reward1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reward1155>;
    deployContract(
      name: "RewardERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardERC20>;
    deployContract(
      name: "RockPaperScissors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RockPaperScissors>;
    deployContract(
      name: "CatchEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CatchEntity>;
    deployContract(
      name: "DailyInteractionEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DailyInteractionEntity>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "FlowEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FlowEntity>;
    deployContract(
      name: "IEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntity>;
    deployContract(
      name: "IGameFuncEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGameFuncEntity>;
    deployContract(
      name: "INumberEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INumberEntity>;
    deployContract(
      name: "MMONeighborInteractionEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMONeighborInteractionEntity>;
    deployContract(
      name: "MMOSessionEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MMOSessionEntity>;
    deployContract(
      name: "QueueSessionEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.QueueSessionEntity>;
    deployContract(
      name: "Reward1155Entity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reward1155Entity>;
    deployContract(
      name: "SimpleMintable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleMintable>;
    deployContract(
      name: "Reward20Entity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Reward20Entity>;
    deployContract(
      name: "SimpleMintableERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleMintableERC20>;
    deployContract(
      name: "RockPaperScissorEntity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RockPaperScissorEntity>;
    deployContract(
      name: "EntityFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EntityFactory>;
    deployContract(
      name: "Game",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Game>;
    deployContract(
      name: "GameFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GameFactory>;
    deployContract(
      name: "IEntityFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntityFactory>;
    deployContract(
      name: "IGame",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGame>;
    deployContract(
      name: "PlayMintContext",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlayMintContext>;
    deployContract(
      name: "D7",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.D7>;
    deployContract(
      name: "FarcadeAlphaTestTicket",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FarcadeAlphaTestTicket>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
